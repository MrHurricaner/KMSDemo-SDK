#ifndef __HEADER_ECSCHNORR_H__
#define __HEADER_ECSCHNORR_H__

#include "typedef.h"
#include "secp256k1_curve.h"

#ifdef  __cplusplus
extern "C" {
#endif

/*
=======================================================================================================================
	描述:ECSchnorr密钥生成算法
	输入:
		pSys_Para: 系统参数
		pbPriKey:私钥，即随机数,长度为32字节
	输出:
		pbPubKey:公钥,即椭圆曲线点，长度为64字节
	返回：
		0	失败
		1	成功
=======================================================================================================================
*/
S32 ECSchnorr_KeyGen(U8 *pbPubKey, SECP256K1_Sys_Para *pSys_Para, U8 *pbPriKey);

/*
=======================================================================================================================
	描述:ECSchnorr签名算法
	输入:
		pSys_Para: 系统参数
		pbHash:杂凑值，即待签名数据的杂凑值,长度为32字节
		pbPriKey:私钥，即签名所用的私钥,长度为32字节
		pbRand:随机数，即签名所用的随机数,长度为32字节
	输出:
		pbSign:签名值,即(r,s)，长度为64字节
	返回：
		0	失败
		1	成功
=======================================================================================================================
*/
S32 ECSchnorr_Sign(U8 *pbSign, SECP256K1_Sys_Para *pSys_Para, U8 *pbHash, U8 *pbPriKey, U8 *pbRand);

/*
=======================================================================================================================
	描述:ECSchnorr验签算法
	输入:
		pSys_Para: 系统参数
		pbHash:杂凑值，即待验签数据的杂凑值,长度为32字节
		pbPubKey:公钥，即验签所用的公钥,长度为64字节
		pbSign:签名值,即待验证的签名值(r,s)，长度为64字节
	输出:
		无
	返回：
		0	失败
		1	成功
=======================================================================================================================
*/
S32 ECSchnorr_Verify(SECP256K1_Sys_Para * pSys_Para, U8 *pbHash, U8 *pbPubKey, U8 *pbSign);

#ifdef  __cplusplus
}
#endif

#endif // !__HEADER_ECSCHNORR_H__
